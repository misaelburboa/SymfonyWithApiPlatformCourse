security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: bcrypt
    providers:
        # in_memory: { memory: ~ }
        database:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            #everything under /api will be secured 
            pattern: ^/api
            #if is stateless each request should include a jwt token
            stateless: true
            #default user does not have to be authenticated, it means is open
            anonymous: true
            #How the user will be authenticated
            json_login: #no token needed
                #Here authentication will happen (token generation)
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard: #token required
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login,  roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,        roles: IS_AUTHENTICATED_FULLY }
